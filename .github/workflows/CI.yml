name: CI
env: 
  EB_PACKAGE_S3_BUCKET_NAME : "bucket_name" # bucket name
  EB_APPLICATION_NAME       : "application_name" # application name
  EB_ENVIRONMENT_NAME       : "environement_name" # environment name
  DEPLOY_PACKAGE_NAME       : "app-${{ github.sha }}.zip"
  AWS_REGION_NAME           : "sg-west-2" 
on:
  push:
    branches:
      - master
  workflow_run:
    workflows: [Tests]
    types: [completed]



jobs:
  my_ci_pipeline:
    runs-on: [ubuntu-latest]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Git clone our repos
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ljps-frontend -x ".git"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy our deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Print completion message
        run: echo "CI pipeline successful"

  my_cd_pipeline:
    runs-on: [ubuntu-latest]
    needs: [my_ci_pipeline]
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new EBS application
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name: Deploy new application version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label="Ver-${{ github.sha }}"

      - name: Print completion message
        run: echo "CD pipeline successful"